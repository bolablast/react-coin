{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","Header.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","isDarkAtom","atom","key","default","Chart","coinId","isDark","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","isLoading","data","type","series","map","price","x","time_close","y","open","high","low","close","options","theme","mode","chart","toolbar","show","background","grid","yaxis","plotOptions","candlestick","colors","upward","downward","wick","useFillColor","xaxis","labels","Container","styled","main","ValueNameContainer","div","ValueContainter","Span","span","color","Price","priceInfo","beta","coinHourArr","percent_change_1h","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_1y","coinInfoArr","market_cap","ath_price","volume_24h","market_cap_change_24h","item","Head","header","IconContainer","Title","h1","accentColor","Label","label","Input","input","attrs","HeaderTitle","title","goBack","setDarkAtom","useSetRecoilState","to","style","display","justifyContent","alignItems","className","icon","faArrowCircleLeft","onClick","prev","Overview","Tabs","Tab","props","isActive","textColor","OverviewItem","Description","p","Loader","Coin","useParams","state","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","name","Header","rank","symbol","quotes","USD","toFixed","description","total_supply","max_supply","path","element","beta_value","CoinsList","ul","li","cardBgColor","Img","img","Coins","slice","coin","id","src","toLowerCase","Router","basename","process","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"wOAAMA,EAAQ,iCAEP,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACEC,MAAM,GAAD,OAAIH,EAAJ,WAAsBI,MAAK,SAACC,GAAD,OAAcA,EAASC,WADzD,4C,mDCAMC,EAAaC,YAAK,CAC7BC,IAAK,SACLC,SAAS,I,OCiFIC,I,QAAAA,EAhEf,YAAwC,IAAvBC,EAAsB,EAAtBA,OACTC,EAASC,YAAeP,GAC9B,EAA4BQ,mBAAwB,CAAC,QAASH,IAAS,kBFLlE,SAA0BA,GAC/B,IAAMI,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAC5B,OAAOb,MAAM,GAAD,OACPH,EADO,kBACWY,EADX,mCAC4CS,EAD5C,gBAC6DL,IACvEZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UEC5BgB,CAAiBV,MADXW,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAGnB,OACE,8BACGD,EACC,mBAEA,cAAC,IAAD,CACEE,KAAK,cACLC,OAAQ,CACN,CACEF,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMG,KAAI,SAACC,GAKf,MAJiB,CACfC,EAAG,IAAIV,KAAKS,EAAME,YAClBC,EAAG,CAACH,EAAMI,KAAMJ,EAAMK,KAAML,EAAMM,IAAKN,EAAMO,aAMrDC,QAAS,CACPC,MAAO,CACLC,KAAMzB,EAAS,OAAS,SAE1B0B,MAAO,CACLC,QAAS,CACPC,MAAM,GAERC,WAAY,eAEdC,KAAM,CACJF,MAAM,GAERG,MAAO,CACLH,MAAM,GAERI,YAAa,CACXC,YAAa,CACXC,OAAQ,CACNC,OAAQ,UACRC,SAAU,WAEZC,KAAM,CACJC,cAAc,KAKpBC,MAAO,CACLC,OAAQ,CACNZ,MAAM,UCxEhBa,EAAYC,IAAOC,KAAV,mHAMTC,EAAqBF,IAAOG,IAAV,kJAQlBC,EAAkBJ,IAAOG,IAAV,sGAMfE,EAAOL,IAAOM,KAAV,sFAGC,qBAAGC,SAwDCC,I,YAAAA,EArDf,YAA0C,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,KACpBC,EAAc,CAClBF,EAAUG,kBACVH,EAAUI,mBACVJ,EAAUK,kBACVL,EAAUM,mBACVN,EAAUO,mBAENC,EAAc,CAClBR,EAAUS,WACVT,EAAUU,UACVV,EAAUW,WAHQ,UAIfX,EAAUY,sBAJK,KAKlBX,GAEF,OACE,qCACE,eAACX,EAAD,WACE,eAACG,EAAD,WACE,sCACA,uCACA,wCACA,yCACA,2CAEF,cAACE,EAAD,UACGO,EAAYvC,KAAI,SAACkD,GAAD,OACf,eAACjB,EAAD,CAAiBE,MAAOe,EAAO,EAAI,QAAU,MAA7C,UACGA,EADH,MAAWA,WAMjB,eAACvB,EAAD,WACE,eAACG,EAAD,WACE,8CACA,iDACA,gDACA,oDACA,2CAEF,cAACE,EAAD,UACGa,EAAY7C,KAAI,SAACkD,GAAD,OACf,cAACjB,EAAD,CAAiBE,MAAM,QAAvB,SACGe,GADQA,e,gBChEjBC,EAAOvB,IAAOwB,OAAV,0HAOJC,EAAgBzB,IAAOG,IAAV,0QAYbuB,EAAQ1B,IAAO2B,GAAV,+DAEA,qBAAG7C,MAAkB8C,eAQ1BC,EAAQ7B,IAAO8B,MAAV,8GAOLC,EAAQ/B,IAAOgC,MAAMC,MAAM,CAAE/D,KAAM,YAA3B8B,CAAH,gVAiBLK,EAAOL,IAAOM,KAAV,idAsDK4B,I,eAAAA,GA7Bf,YAAuD,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,OACtBC,EAAcC,YAAkBtF,GAEtC,OACE,eAACuE,EAAD,WACGa,EACC,cAAC,IAAD,CAAMG,GAAG,IAAT,SACE,cAACd,EAAD,CACEe,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAAC,IAAD,CAAiBC,UAAU,QAAQC,KAAMC,UAI7C,wBAEF,cAACpB,EAAD,UAAQS,GAAgB,YACxB,eAACN,EAAD,WACE,cAACE,EAAD,CAAOgB,QApBU,kBAAMV,GAAY,SAACW,GAAD,OAAWA,QAqB9C,cAAC,EAAD,WCjGFC,GAAWjD,IAAOG,IAAV,yKAQR+C,GAAOlD,IAAOG,IAAV,2HAOJgD,GAAMnD,IAAOM,KAAV,gQAQE,SAAC8C,GAAD,OACPA,EAAMC,SAAWD,EAAMtE,MAAM8C,YAAcwB,EAAMtE,MAAMwE,aAMrDC,GAAevD,IAAOG,IAAV,kOAWZqD,GAAcxD,IAAOyD,EAAV,iDAIX1D,GAAYC,IAAOG,IAAV,kDAITuD,GAAS1D,IAAOM,KAAV,wEA+JGqD,I,eAAAA,GAtFf,WACE,IAAQtG,EAAWuG,cAAXvG,OACFwG,EAAQC,cAAcD,MACtBE,EAAaC,YAAS,kBACtBC,EAAaD,YAAS,kBAC5B,EAAmDxG,mBACjD,CAAC,OAAQH,IACT,kBLtIG,SAAuBA,GAC5B,OAAOT,MAAM,GAAD,OAAIH,EAAJ,kBAAsBY,IAAUR,MAAK,SAACC,GAAD,OAC/CA,EAASC,UKoIHmH,CAAc7G,MAFH8G,EAAnB,EAAQnG,UAA8BoG,EAAtC,EAAgCnG,KAOhC,EAAyDT,mBACvD,CAAC,UAAWH,IACZ,kBLvIG,SAA0BA,GAC/B,OAAOT,MAAM,GAAD,OAAIH,EAAJ,oBAAwBY,IAAUR,MAAK,SAACC,GAAD,OACjDA,EAASC,UKqIHsH,CAAiBhH,MAFNiH,EAAnB,EAAQtG,UAAiCuG,EAAzC,EAAmCtG,KAI7BuG,EAAUL,GAAeG,EAC/B,OACE,eAAC,GAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,iCACQ,OAALT,QAAK,IAALA,OAAA,EAAAA,EAAOY,MAAOZ,EAAMY,KAAOD,EAAU,aAAH,OAAkBJ,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUK,WAIrE,cAACC,GAAD,CACEtC,QAAQ,EACRD,OACO,OAAL0B,QAAK,IAALA,OAAA,EAAAA,EAAOY,MAAOZ,EAAMY,KAAOD,EAAU,aAAH,OAAkBJ,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUK,OAGjED,EACC,cAACd,GAAD,yBAEA,qCACE,eAACT,GAAD,WACE,eAACM,GAAD,WACE,yCACA,sCAAOa,QAAP,IAAOA,OAAP,EAAOA,EAAUO,UAEnB,eAACpB,GAAD,WACE,2CACA,4CAAQa,QAAR,IAAQA,OAAR,EAAQA,EAAUQ,aAEpB,eAACrB,GAAD,WACE,0CACA,sCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAaM,OAAOC,IAAIzG,MAAM0G,QAAQ,WAGjD,cAACvB,GAAD,iBAAcY,QAAd,IAAcA,OAAd,EAAcA,EAAUY,cACxB,eAAC/B,GAAD,WACE,eAACM,GAAD,WACE,gDACA,sCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAaU,kBAEtB,eAAC1B,GAAD,WACE,+CACA,sCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAaW,mBAGxB,eAAChC,GAAD,WACE,cAACC,GAAD,CAAKE,SAAyB,OAAfY,EAAf,SACE,cAAC,IAAD,CAAM1B,GAAE,WAAMlF,EAAN,UAAR,qBAEF,cAAC8F,GAAD,CAAKE,SAAyB,OAAfU,EAAf,SACE,cAAC,IAAD,CAAMxB,GAAE,WAAMlF,EAAN,UAAR,wBAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8H,KAAK,QAAQC,QAAS,cAAC,EAAD,CAAO/H,OAAQA,MAC5C,cAAC,IAAD,CACE8H,KAAK,QACLC,QACE,cAAC,EAAD,CACE3E,UAAS,OAAE8D,QAAF,IAAEA,OAAF,EAAEA,EAAaM,OAAOC,IAC/BpE,KAAI,OAAE6D,QAAF,IAAEA,OAAF,EAAEA,EAAac,yBC1M/BtF,GAAYC,IAAOG,IAAV,oDAITmF,GAAYtF,IAAOuF,GAAV,4BAET5B,GAAO3D,IAAOwF,GAAV,yTACY,SAACpC,GAAD,OAAWA,EAAMtE,MAAM2G,eAClC,qBAAG3G,MAAkBwE,aAYjB,qBAAGxE,MAAkB8C,eAK9B8B,GAAS1D,IAAOM,KAAV,wEAKNoF,GAAM1F,IAAO2F,IAAV,sFA8CMC,OA9Bf,WACE,MAA4BpI,mBAAkB,WAAYd,GAAlDsB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KACnB,OACE,eAAC,GAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,qDAGJ,cAACyG,GAAD,CAAatC,QAAQ,EAAOD,MAAM,UACjCnE,EACC,cAAC,GAAD,yBAEA,cAACsH,GAAD,iBACGrH,QADH,IACGA,OADH,EACGA,EAAM4H,MAAM,EAAG,KAAKzH,KAAI,SAAC0H,GAAD,OACvB,cAAC,GAAD,UACE,eAAC,IAAD,CAAMvD,GAAE,WAAMuD,EAAKC,IAAMlC,MAAO,CAAEY,KAAMqB,EAAKrB,MAA7C,UACE,cAACiB,GAAD,CACEM,IAAG,qDAAgDF,EAAKlB,OAAOqB,iBAEhEH,EAAKrB,KAJR,cADSqB,EAAKC,aCrDbG,I,GAAAA,GAXf,WACE,OACE,cAAC,IAAD,CAAeC,SAAUC,cAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOjB,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,GAAD,YCP7BiB,GAA0B,CACrCC,QAAS,UACThD,UAAW,QACX1B,YAAa,UACb6D,YAAa,eAGFc,GAA2B,CACtCD,QAAS,aACThD,UAAW,QACX1B,YAAa,UACb6D,YAAa,SCPTe,GAAcC,YAAH,26CAoDK,qBAAG3H,MAAkBwH,WACjC,SAAClD,GAAD,OAAWA,EAAMtE,MAAMwE,aAqBlBoD,OAZf,WACE,IAAMpJ,EAASC,YAAeP,GAC9B,OACE,mCACE,eAAC,IAAD,CAAe8B,MAAOxB,EAAS+I,GAAYE,GAA3C,UACE,cAACC,GAAD,IACA,cAAC,GAAD,UCpEFG,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,GAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.3d284165.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport async function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: false,\r\n});\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId)\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              data: data?.map((price) => {\r\n                const priceObj = {\r\n                  x: new Date(price.time_close),\r\n                  y: [price.open, price.high, price.low, price.close],\r\n                };\r\n                return priceObj;\r\n              }),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: {\r\n              show: false,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            plotOptions: {\r\n              candlestick: {\r\n                colors: {\r\n                  upward: \"#3C90EB\",\r\n                  downward: \"#DF7D46\",\r\n                },\r\n                wick: {\r\n                  useFillColor: true,\r\n                },\r\n              },\r\n            },\r\n            //x축\r\n            xaxis: {\r\n              labels: {\r\n                show: false,\r\n              },\r\n              //  categories: data?.map((price) => price.time_close),\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.main`\r\n  margin-top: 50px;\r\n  height: 120px;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst ValueNameContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst ValueContainter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  font-size: 20px;\r\n  text-align: center;\r\n  color: ${({ color }) => color};\r\n`;\r\n\r\nfunction Price({ priceInfo, beta }: any) {\r\n  const coinHourArr = [\r\n    priceInfo.percent_change_1h,\r\n    priceInfo.percent_change_24h,\r\n    priceInfo.percent_change_7d,\r\n    priceInfo.percent_change_30d,\r\n    priceInfo.percent_change_1y,\r\n  ];\r\n  const coinInfoArr = [\r\n    priceInfo.market_cap,\r\n    priceInfo.ath_price,\r\n    priceInfo.volume_24h,\r\n    `${priceInfo.market_cap_change_24h}%`,\r\n    beta,\r\n  ];\r\n  return (\r\n    <>\r\n      <Container>\r\n        <ValueNameContainer>\r\n          <span>1h</span>\r\n          <span>24h</span>\r\n          <span>Week</span>\r\n          <span>Month</span>\r\n          <span>Year</span>\r\n        </ValueNameContainer>\r\n        <ValueContainter>\r\n          {coinHourArr.map((item) => (\r\n            <Span key={item} color={item > 0 ? \"green\" : \"red\"}>\r\n              {item}%\r\n            </Span>\r\n          ))}\r\n        </ValueContainter>\r\n      </Container>\r\n      <Container>\r\n        <ValueNameContainer>\r\n          <span>Market Cap</span>\r\n          <span>All Time High</span>\r\n          <span>Volume (24h)</span>\r\n          <span>Vol /M Cap (24h)</span>\r\n          <span>Beta</span>\r\n        </ValueNameContainer>\r\n        <ValueContainter>\r\n          {coinInfoArr.map((item) => (\r\n            <Span key={item} color=\"black\">\r\n              {item}\r\n            </Span>\r\n          ))}\r\n        </ValueContainter>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { isDarkAtom } from \"./atoms\";\r\n\r\nconst Head = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  transition: transform 0.1s linear;\r\n  &:hover {\r\n    transform: perspective(10000px) translate3d(-5px, 0, 10px);\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${({ theme }) => theme.accentColor};\r\n`;\r\n\r\ninterface IHeaderProps {\r\n  title?: string;\r\n  goBack: boolean;\r\n}\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 60px;\r\n  height: 34px;\r\n`;\r\n\r\nconst Input = styled.input.attrs({ type: \"checkbox\" })`\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n  &:checked + span {\r\n    background-color: #2196f3;\r\n  }\r\n  &:focus + span {\r\n    box-shadow: 0 0 1px #2196f3;\r\n  }\r\n  &:checked + span:before {\r\n    -webkit-transform: translateX(26px);\r\n    -ms-transform: translateX(26px);\r\n    transform: translateX(26px);\r\n  }\r\n`;\r\n\r\nconst Span = styled.span`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc;\r\n  -webkit-transition: 0.4s;\r\n  transition: 0.4s;\r\n  border-radius: 34px;\r\n  &::before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 26px;\r\n    width: 26px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nfunction HeaderTitle({ title, goBack }: IHeaderProps) {\r\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\r\n  return (\r\n    <Head>\r\n      {goBack ? (\r\n        <Link to=\"/\">\r\n          <IconContainer\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FontAwesomeIcon className=\"fa-2x\" icon={faArrowCircleLeft} />\r\n          </IconContainer>\r\n        </Link>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <Title>{title ? title : \"loading\"}</Title>\r\n      <Label>\r\n        <Input onClick={toggleDarkAtom} />\r\n        <Span />\r\n      </Label>\r\n    </Head>\r\n  );\r\n}\r\n\r\nexport default HeaderTitle;\r\n","import { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation, useMatch, Routes, Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport HeaderTitle from \"../Header\";\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  tags: object;\r\n  team: object;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: Date;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  links: object;\r\n  links_extended: object;\r\n  whitepaper: object;\r\n  first_data_at: Date;\r\n  last_data_at: Date;\r\n}\r\n\r\ninterface USD {\r\n  price: number;\r\n  volume_24h: number;\r\n  volume_24h_change_24h: number;\r\n  market_cap: number;\r\n  market_cap_change_24h: number;\r\n  percent_change_15m: number;\r\n  percent_change_30m: number;\r\n  percent_change_1h: number;\r\n  percent_change_6h: number;\r\n  percent_change_12h: number;\r\n  percent_change_24h: number;\r\n  percent_change_7d: number;\r\n  percent_change_30d: number;\r\n  percent_change_1y: number;\r\n  ath_price: number;\r\n  ath_date: Date;\r\n  percent_from_price_ath: number;\r\n}\r\n\r\ninterface Quotes {\r\n  USD: USD;\r\n}\r\n\r\ninterface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: Date;\r\n  last_updated: Date;\r\n  quotes: Quotes;\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams() as any;\r\n  const state = useLocation().state as RouteState;\r\n  const priceMatch = useMatch(\"/:coinId/price\");\r\n  const chartMatch = useMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId) /*,\r\n    {\r\n      refetchInterval: 5000,\r\n    } */\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<IPriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId)\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>\r\n            {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n          </title>\r\n        </Helmet>\r\n      </HelmetProvider>\r\n      <HeaderTitle\r\n        goBack={true}\r\n        title={\r\n          state?.name ? state.name : loading ? \"Loading...\" : infoData?.name\r\n        }\r\n      />\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>{tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Routes>\r\n            <Route path=\"chart\" element={<Chart coinId={coinId} />} />\r\n            <Route\r\n              path=\"price\"\r\n              element={\r\n                <Price\r\n                  priceInfo={tickersData?.quotes.USD}\r\n                  beta={tickersData?.beta_value}\r\n                />\r\n              }\r\n            />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;\r\n","import { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport HeaderTitle from \"../Header\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${({ theme }) => theme.textColor};\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid white;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${({ theme }) => theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  return (\r\n    <Container>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>코인</title>\r\n        </Helmet>\r\n      </HelmetProvider>\r\n      <HeaderTitle goBack={false} title=\"Coins\" />\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link to={`/${coin.id}`} state={{ name: coin.name }}>\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Coins />} />\r\n        <Route path=\"/:coinId/*\" element={<Coin />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"transparent\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"whitesmoke\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"white\",\r\n};\r\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nfont-family: 'Source Sans Pro', sans-serif;\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n\tfont-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${({ theme }) => theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}